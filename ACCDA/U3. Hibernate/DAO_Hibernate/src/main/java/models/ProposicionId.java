package models;
// Generated 25 ene 2023 9:47:57 by Hibernate Tools 5.5.9.Final

import java.util.Date;

/**
 * ProposicionId generated by hbm2java
 */
public class ProposicionId implements java.io.Serializable {

	private int idVenta;
	private int idCliente;
	private int idVehiculo;
	private Date fechaProposicion;

	public ProposicionId() {
	}

	public ProposicionId(int idVenta, int idCliente, int idVehiculo, Date fechaProposicion) {
		this.idVenta = idVenta;
		this.idCliente = idCliente;
		this.idVehiculo = idVehiculo;
		this.fechaProposicion = fechaProposicion;
	}

	public int getIdVenta() {
		return this.idVenta;
	}

	public void setIdVenta(int idVenta) {
		this.idVenta = idVenta;
	}

	public int getIdCliente() {
		return this.idCliente;
	}

	public void setIdCliente(int idCliente) {
		this.idCliente = idCliente;
	}

	public int getIdVehiculo() {
		return this.idVehiculo;
	}

	public void setIdVehiculo(int idVehiculo) {
		this.idVehiculo = idVehiculo;
	}

	public Date getFechaProposicion() {
		return this.fechaProposicion;
	}

	public void setFechaProposicion(Date fechaProposicion) {
		this.fechaProposicion = fechaProposicion;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof ProposicionId))
			return false;
		ProposicionId castOther = (ProposicionId) other;

		return (this.getIdVenta() == castOther.getIdVenta()) && (this.getIdCliente() == castOther.getIdCliente())
				&& (this.getIdVehiculo() == castOther.getIdVehiculo())
				&& ((this.getFechaProposicion() == castOther.getFechaProposicion())
						|| (this.getFechaProposicion() != null && castOther.getFechaProposicion() != null
								&& this.getFechaProposicion().equals(castOther.getFechaProposicion())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getIdVenta();
		result = 37 * result + this.getIdCliente();
		result = 37 * result + this.getIdVehiculo();
		result = 37 * result + (getFechaProposicion() == null ? 0 : this.getFechaProposicion().hashCode());
		return result;
	}

}
